[はじめに]
解説は[GitBash]によるCUI入力ですが、
TortoiseGitによるGUI入力でもOKです。
（CUIに対応するGUIコマンドを各自調べながら進めてください。）

[GitBashの開き方]
任意のスペースで右クリック[Git Bash Here]を選択すると、
選択したディレクトリでコマンドラインが開きます。

[xxxについて]
任意の名称は適宜置き換えてください。
例) Dev_xxx → Dev_numa

===========================================================================================
[Practice 01]リポジトリをクローンする
・コマンド[1]を実行し、練習用リポジトリをローカルでクローンする

[チェック]
任意のディレクトリに、下記構成がクローンされていればOKです。
・SandBox
└.git
└Practice.txt

[コマンド]
[1]	git clone https://github.com/etrobotclub/SandBox.git

===========================================================================================
[Practice 02]ブランチを作成する
・リポジトリ管理ディレクトリ(.gitがあるディレクトリ)に移動
・コマンド[1]を実行し、自分専用のブランチ(Dev_xxx)をローカルで作成する

[チェック]
コマンド[2]を実行し、作成したブランチ名(Dev_xxx)が表示されていればOK

[コマンド]
[1]	git branch Dev_xxx
[2]	git branch -a

===========================================================================================
[Practice 03]ブランチ間を移動(checkout)する
・コマンド[1]を実行し、自分専用のブランチ(Dev_xxx)に移動する

[チェック]
コマンド[2]を実行し、移動先のブランチ名(Dev_xxx)が緑色でハイライト表示されていればOK

[コマンド]
[1]	git checkout Dev_xxx
[2]	git branch -a

===========================================================================================
[Practice 04]ローカルリポジトリのブランチをリモートリポジトリに反映する
・コマンド[1]を実行し、ローカルリポジトリのブランチをリモートリモートリポジトリに反映する

[チェック]
コマンド[2]を実行し、リモートリポジトリブランチ(例：remotes/origin/Dev_xxx)が表示されていればOK

[コマンド]
[1]	git push --set-upstream origin Dev_xxx
[2]	git branch -a

===========================================================================================
[Practice 05]ファイルを追加(add)する
・コマンド[1]を実行し、ディレクトリ(test_xxx)を作成する
・コマンド[2]を実行し、ファイル(test_xxx.txt)を作成する
・コマンド[3]を実行し、新規ファイル(例：test_xxx.txt)が赤色表示されていることを確認する
・コマンド[4]を実行し、ファイルを追加する

[チェック]
コマンド[2]を実行し、表示が赤色→緑色になっていればOK

[コマンド]
[1]	mkdir test_xxx
[2]	touch test_xxx.txt
[3]	git status
[4]	git add test_xxx.txt

===========================================================================================
[Practice 06]ファイルの変更をローカルリポジトリに登録(commit)する
・コマンド[1]を実行し、ファイルの変更をコミットする

[チェック]
コマンド[2]を実行し、緑色で表示されていたファイル(test_xxx.txt)が消えて
「nothing to commit, working tree clean」の表示がでていればOK

[コマンド]
[1]	git commit -m "test_xxxのコミット"
[2]	git status

===========================================================================================
[Practice 07]ファイルの変更をリモートリポジトリに登録(push)する
・コマンド[1]を実行し、ファイルの変更をプッシュする

[チェック]
コマンド[2]を実行し、
「Your branch is up to date with 'origin/Dev_xxx'.」の表示がでていればプッシュ成功

リモートリポジトリ[https://github.com/etrobotclub/SandBox]にアクセスし、
ブランチをmaster→Dev_xxxに切り替えて、変更が反映されていればOK

[コマンド]
[1]	git push
[2]	git status

===========================================================================================
[Practice 08]masterにマージする
・コマンド[1]を実行し、masterにチェックアウトする
・コマンド[2]を実行し、masterを最新にする
・コマンド[3]を実行し、ローカルリポジトリのDev_xxx→masterへ変更をマージする
・コマンド[4]を実行し、ローカルリポジトリのmaster→リモートリポジトリのmasterへ変更をマージする

[コマンド]
[1]	git checkout master
[2]	git pull
[3]	git merge Dev_xxx
[4]	git push

リモートリポジトリ[https://github.com/etrobotclub/SandBox]にアクセスし、
ブランチをmasterに切り替えて、変更が反映されていればOK

